in /usr/local/NetSapiens/netsapiens-portals/views/callhistory there are 3 files index.ctp, index_d.ctp, and index_u.ctp these files build the manager portal for superuser/reseller, domain view, and user view respectively.

find the line:
```php
$btns = array($btns, array('class' => 'action-buttons'));
```

and above it let's add our new button:
```php
if ($this->Uiconfig->isUiConfig('PORTAL_CALLHISTORY_SHOW_DTMF_BTN', 'no')) {
    $btns .= $this->Html->link(
        '',
        '#',
        [
            'escape'       => false,
            'class'        => 'dtmf-view helpsy reports', // i use the 'reports' class to give it the same button icon as notes etc, you can change it if you wanna mess with css
            'title'        => 'Show DTMF entries',
            'onclick'      => 'return openDtmfOverlay(this);',
        ]
    );
}
$btns = array($btns, array('class' => 'action-buttons')); // keep this after our new button
```

then at the very end of the file add the script to generate the modal card:
```js
<script>
(function($){
  "use strict";

  function ensureOverlay(){
    var $ov = $('#dtmf-overlay');
    if ($ov.length) return $ov;

    $('body').append(
      '<div id="dtmf-overlay" style="position:fixed;inset:0;background:rgba(0,0,0,.55);z-index:2147483000;display:none">' +
        '<div id="dtmf-card" style="position:absolute;top:10%;left:50%;transform:translateX(-50%);' +
                                   'width:640px;max-width:95vw;background:#fff;border-radius:6px;' +
                                   'box-shadow:0 10px 30px rgba(0,0,0,.5);">' +
          '<div style="padding:10px 14px;border-bottom:1px solid #eee;display:flex;justify-content:space-between;align-items:center">' +
            '<strong>DTMF Entered</strong>' +
            '<a href="#" id="dtmf-close" style="text-decoration:none;font-size:20px;line-height:1">×</a>' +
          '</div>' +
          '<div id="dtmf-body" style="padding:12px 14px">' +
            '<div id="dtmf-summary" style="margin-bottom:8px"></div>' +
            '<div id="dtmf-results"></div>' +
          '</div>' +
          '<div style="padding:10px 14px;border-top:1px solid #eee;text-align:right">' +
            '<a href="#" class="btn" id="dtmf-close2">Close</a>' +
          '</div>' +
        '</div>' +
      '</div>'
    );
    $ov = $('#dtmf-overlay');
    $ov.on('click', '#dtmf-close,#dtmf-close2', function(e){ e.preventDefault(); $ov.hide(); });
    $ov.on('click', function(e){ if (e.target.id === 'dtmf-overlay') $ov.hide(); });
    return $ov;
  }

  function parseDtmfCsv(text){
    var entries = [], m;
    var reDigits = /Digits\s+entered\s*=\s*<([^>]+)>/gi;
    var reNone   = /T\/O\s+no\s+digit\s+entered/gi;
    while ((m = reDigits.exec(text)) !== null) entries.push({ type: 'digits', value: (m[1]||'').trim() });
    while ((m = reNone.exec(text))   !== null) entries.push({ type: 'none',   value: '' });
    return entries;
  }

  function render(entries){
    var $sum = $('#dtmf-summary'), $res = $('#dtmf-results');
    $sum.empty(); $res.empty();

    if (!entries.length){
      $sum.text('No DTMF or timeout markers found in SIP trace CSV for this call.');
      return;
    }
    var seqs = entries.filter(function(e){return e.type==='digits';}).map(function(e){return e.value;});
    if (seqs.length){
      $sum.html('<strong>Combined sequences:</strong> ' + $('<div/>').text(seqs.join(' ')).html());
    } else {
      $sum.text('No digits entered; only timeout markers present.');
    }
    var rows = entries.map(function(e,i){
      var typeLabel = e.type==='digits' ? 'Digits entered' : 'No digit entered';
      var content   = e.type==='digits' ? $('<div/>').text(e.value).html() : '—';
      return '<tr><td>'+ (i+1) +'</td><td>'+ typeLabel +'</td><td>'+ content +'</td></tr>';
    }).join('');
    $res.html('<table class="table table-striped table-condensed">' +
                '<thead><tr><th>#</th><th>Type</th><th>Content</th></tr></thead>' +
                '<tbody>'+ rows +'</tbody>' +
              '</table>');
  }

  function fetchCsv(url1, url2){
    return fetch(url1, {credentials:'same-origin', cache:'no-cache'})
      .then(function(r){ if (r.ok) return r.text();
        return fetch(url2, {credentials:'same-origin', cache:'no-cache'}).then(function(r2){
          if(!r2.ok) throw new Error('HTTP '+r.status+'/'+r2.status);
          return r2.text();
        });
      });
  }

  // build "/csv" path from the SIP Flow link
  function toCsvUrl(href){
    var base = href.split('#')[0].split('?')[0].replace(/\/+$/,'');
    return base + '/csv';
  }

  window.openDtmfOverlay = function(el){
    var $row = $(el).closest('tr');
    var href = $row.find('a.details').attr('href');
    if (!href) { alert('SIP Flow link not found for this row.'); return false; }

    var $ov = ensureOverlay();
    $('#dtmf-summary').text('Loading…');
    $('#dtmf-results').empty();
    $ov.show();

    var csvUrl = toCsvUrl(href);
    var url1   = csvUrl;
    var url2   = csvUrl + '?format=csv';   // fallback if server expects a hint

    window.dtmfCache = window.dtmfCache || {};
    var key = url1;
    if (window.dtmfCache[key]) { render(window.dtmfCache[key]); return false; }

    fetchCsv(url1, url2)
      .then(function(txt){
        var entries = parseDtmfCsv(txt);
        window.dtmfCache[key] = entries;
        render(entries);
      })
      .catch(function(err){
        if (window.console && console.error) console.error('DTMF CSV load failed:', err);
        $('#dtmf-summary').text('Failed to load SIP trace CSV for this call.');
      });

    return false;
  };

  $(document)
    .off('click.dtmf', 'a.dtmf-view')
    .on('click.dtmf', 'a.dtmf-view', function(e){
      e.preventDefault();
      e.stopImmediatePropagation();
      return openDtmfOverlay(this);
    });

})(jQuery);
</script>
```

then in the admin portal, add the ui config:
`PORTAL_CALLHISTORY_SHOW_DTMF_BTN` = `yes`

to enable the new button
